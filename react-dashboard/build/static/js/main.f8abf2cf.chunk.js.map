{"version":3,"sources":["../node_modules/@stencil/core/internal/client lazy /^/.*$/ include: /.entry/.js$/ exclude: /.system/.entry/.js$/ groupOptions: {} namespace object","MapArcgis.js","data/BackEndConnection.js","Filter.js","ParallelCoordinates.js","App.js","reportWebVitals.js","index.js"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","MapArcgis","props","useState","layerId","data","dataToRender","values","layerToShow","setLayerToShow","layers","mapDiv","useRef","DEFAULT_SYMBOL","type","color","getField","field","onClickShape","response","layer","uniqueValueInfos","attributes","results","graphic","codeToRender","MPIO_CDPMP","DPTO_CCDGO","getCodeToRender","renderer","value","symbol","outline","width","defaultSymbol","error","useEffect","showCountyView","Object","entries","realData","map","current","Map","basemap","fl","FeatureLayer","portalItem","popupEnabled","SimpleFillSymbol","SimpleLineSymbol","valueRenderID","getDataToRenderFrom","add","view","MapView","container","center","zoom","on","event","hitTest","doSomenthing","Fragment","className","onClick","changeLayer","name","style","height","ref","axios","require","username","password","getData","cities","years","variables","a","get","params","join","auth","console","getCities","getCounties","getCountyCities","county","counties","getVariables","getYears","inputs","radioButtons","Filter","open","setOpen","loading","setLoading","setVariables","setCities","setCounties","setYears","filters","setFilters","entityType","setEntityType","length","setData","handleInputChange","input","splitStringArray","split","prevState","handleClose","handleOpen","RadioGroup","defaultValue","onChange","radioButtonSelect","target","setShowCountyView","FormControlLabel","control","Radio","label","Select","multiple","selectedVariables","setSelectedVariables","handleVariableFilterChange","undefined","Input","display","onClose","MenuProps","anchorEl","document","getElementById","index","MenuItem","Checkbox","checked","indexOf","ListItemText","primary","forEach","department","push","Set","showCounties","showCities","disabled","ParallelCoordinates","key","padding","d","municipio","legend","legendPosition","legendOffset","newData","variable","city","cityData","rows","reduce","grouped","curr","countyName","otherVariables","filter","min","max","ticksPosition","concat","reverse","margin","top","right","bottom","left","colors","scheme","lineOpacity","App","MPIO_CNMBR","COLOR","FIRST_DPTO_CNMBR","mapData","setMapData","layerType","newMapData","Grid","direction","justifyContent","alignItems","item","xs","md","overflow","minHeight","slice","Divipola","Municipio","Departamento","Mujeres","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.f8abf2cf.chunk.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 672;","import React, { useState, useRef, useEffect } from \"react\";\r\n\r\nimport FeatureLayer from \"@arcgis/core/layers/FeatureLayer\";\r\nimport MapView from \"@arcgis/core/views/MapView\";\r\nimport Map from \"@arcgis/core/Map\";\r\nimport SimpleFillSymbol from \"@arcgis/core/symbols/SimpleFillSymbol\";\r\nimport SimpleLineSymbol from \"@arcgis/core/symbols/SimpleLineSymbol\";\r\nimport \"./styles/Map.css\";\r\n\r\nfunction MapArcgis(props) {\r\n  const [layerToShow, setLayerToShow] = useState({\r\n    layerId: props.data[0].layerId,\r\n    dataToRender: props.data[0].values,\r\n  });\r\n\r\n  const layers = props.data;\r\n  const mapDiv = useRef(null);\r\n  const DEFAULT_SYMBOL = { type: \"simple-fill\", color: \"#DCDCDC\" };\r\n  useEffect(() => {\r\n    let newLayerId = 0;\r\n    if (props.showCountyView) {\r\n      newLayerId = 1;\r\n    }\r\n\r\n    const newData = Object.entries(props.realData).map((value) => {\r\n      const newValue = {\r\n        layerId: newLayerId,\r\n        name: Object.values(value),\r\n      };\r\n    });\r\n  }, [props.realData, props.showCountyView]);\r\n\r\n  function getField() {\r\n    let field = \"\";\r\n    if (layerToShow.layerId === 0) {\r\n      field = \"MPIO_CDPMP\";\r\n    } else if (layerToShow.layerId === 1) {\r\n      field = \"DPTO_CCDGO\";\r\n    }\r\n    return field;\r\n  }\r\n\r\n  function getCodeToRender(attributes) {\r\n    let codeToRender = \"\";\r\n\r\n    if (layerToShow.layerId === 0) {\r\n      codeToRender = attributes.MPIO_CDPMP;\r\n    } else if (layerToShow.layerId === 1) {\r\n      codeToRender = attributes.DPTO_CCDGO;\r\n    }\r\n    return codeToRender;\r\n  }\r\n\r\n  function getDataToRenderFrom(value) {\r\n    let color = value[\"COLOR\"];\r\n    let valueRenderID = value[\"MPIO_CDPMP\"];\r\n    if (layerToShow.layerId === 0) {\r\n      valueRenderID = value[\"MPIO_CDPMP\"];\r\n    } else if (layerToShow.layerId === 1) {\r\n      valueRenderID = value[\"DPTO_CCDGO\"];\r\n    }\r\n    return {\r\n      value: valueRenderID,\r\n      symbol: {\r\n        type: \"simple-fill\", // autocasts as new SimpleFillSymbol()\r\n        color: color,\r\n      },\r\n    };\r\n  }\r\n  function getFields() {\r\n    if (layerToShow.layerId === 0) {\r\n    } else if (layerToShow.layerId === 1) {\r\n    }\r\n  }\r\n\r\n  function onClickShape(response, layer, uniqueValueInfos) {\r\n    try {\r\n      let graphic = response.results[0].graphic;\r\n      let attributes = graphic.attributes;\r\n      const field = getField();\r\n      const codeToRender = getCodeToRender(attributes);\r\n\r\n      let renderer = {\r\n        type: \"unique-value\", // autocasts as new SimpleRenderer()\r\n        field: field,\r\n        uniqueValueInfos: [\r\n          {\r\n            value: codeToRender,\r\n            symbol: {\r\n              type: \"simple-fill\", // autocasts as new SimpleFillSymbol()\r\n              color: \"blue\",\r\n              outline: {\r\n                color: \"orange\",\r\n                width: 3,\r\n              },\r\n            },\r\n          },\r\n        ],\r\n        defaultSymbol: DEFAULT_SYMBOL, // autocasts as new SimpleFillSymbol()\r\n      };\r\n      layer.renderer = renderer;\r\n    } catch (error) {\r\n      const field = getField();\r\n\r\n      let renderer = {\r\n        type: \"unique-value\", // autocasts as new SimpleRenderer()\r\n        field: field,\r\n        uniqueValueInfos: uniqueValueInfos,\r\n        defaultSymbol: DEFAULT_SYMBOL,\r\n      };\r\n      layer.renderer = renderer;\r\n    }\r\n  }\r\n  function changeLayer(layer) {\r\n    setLayerToShow({\r\n      layerId: layer.layerId,\r\n      dataToRender: layer.values,\r\n    });\r\n  }\r\n  useEffect(() => {\r\n    if (mapDiv.current) {\r\n      /**\r\n       * Initialize application\r\n       */\r\n      const map = new Map({\r\n        basemap: \"gray\",\r\n      });\r\n      const fl = new FeatureLayer({\r\n        portalItem: {\r\n          // autocasts as new PortalItem()\r\n          id: \"1e6958a958ac4fcdac8fb14dd97f8734\",\r\n        },\r\n        popupEnabled: false,\r\n        // loads the third item in the given feature service\r\n        layerId: layerToShow.layerId,\r\n      });\r\n\r\n      var symbol = new SimpleFillSymbol();\r\n      var outline = new SimpleLineSymbol();\r\n      var uniqueValueInfos = [];\r\n\r\n      outline.color = \"#999999\";\r\n      outline.width = 0.5;\r\n      symbol.outline = outline;\r\n      uniqueValueInfos = layerToShow.dataToRender.map((value) => {\r\n        return getDataToRenderFrom(value);\r\n      });\r\n      let renderer = {\r\n        type: \"unique-value\", // autocasts as new SimpleRenderer()\r\n        field: getField(),\r\n        uniqueValueInfos: uniqueValueInfos,\r\n        defaultSymbol: DEFAULT_SYMBOL,\r\n      };\r\n      fl.renderer = renderer;\r\n      map.add(fl);\r\n      const view = new MapView({\r\n        container: mapDiv.current,\r\n        map: map,\r\n        center: [-74, 5],\r\n        zoom: 6,\r\n      });\r\n      view.on(\"click\", function (event) {\r\n        // event is the event handle returned after the event fires.\r\n        view.hitTest(event).then((response) => {\r\n          onClickShape(response, fl, uniqueValueInfos, props.doSomenthing);\r\n        });\r\n      });\r\n    }\r\n  }, [layerToShow]);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"t-container\">\r\n        <ul className=\"t-tabs\">\r\n          {layers.map((layer) => {\r\n            return (\r\n              <li className=\"t-tab\" onClick={() => changeLayer(layer)}>\r\n                {layer.name}\r\n              </li>\r\n            );\r\n          })}\r\n        </ul>\r\n      </div>\r\n      <div\r\n        className=\"mapDiv\"\r\n        style={{ width: \"50vw\", height: \"40vh\" }}\r\n        ref={mapDiv}\r\n      ></div>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default MapArcgis;\r\n","const axios = require(\"axios\");\r\n\r\nconst username = \"unfpa_dev\";\r\nconst password = \"vpaD6tzHR9\";\r\n\r\nexport const getData = async (cities, years, variables) => {\r\n  try {\r\n    // fetch data from a url endpoint\r\n    const response = await axios.get(\"/data/\", {\r\n      params: {\r\n        cities: cities.join(),\r\n        years: years.join(),\r\n        variables: variables.join(),\r\n      },\r\n      auth: {\r\n        username: username,\r\n        password: password,\r\n      },\r\n    });\r\n    return await response.data.data;\r\n  } catch (error) {\r\n    console.error(error); // catches both errors\r\n    return [];\r\n  }\r\n};\r\n\r\nexport const getCities = async () => {\r\n  return [\"Bochalema\", \"Marinilla\"];\r\n};\r\n\r\nexport const getCounties = async () => {\r\n  try {\r\n    // fetch data from a url endpoint\r\n    const response = await axios.get(\"/counties/\", {\r\n      auth: {\r\n        username: username,\r\n        password: password,\r\n      },\r\n    });\r\n    return await response.data.data;\r\n  } catch (error) {\r\n    console.error(error); // catches both errors\r\n    return [];\r\n  }\r\n};\r\n\r\nexport const getCountyCities = async (county) => {\r\n  try {\r\n    // fetch data from a url endpoint\r\n    const response = await axios.get(\"/county-cities/\", {\r\n      params: {\r\n        counties: county.join(),\r\n      },\r\n      auth: {\r\n        username: username,\r\n        password: password,\r\n      },\r\n    });\r\n    return await response.data.data;\r\n  } catch (error) {\r\n    console.error(error); // catches both errors\r\n    return [];\r\n  }\r\n};\r\n\r\nexport const getVariables = async () => {\r\n  try {\r\n    // fetch data from a url endpoint\r\n    const response = await axios.get(\"/variables/\", {\r\n      auth: {\r\n        username: username,\r\n        password: password,\r\n      },\r\n    });\r\n    return await response.data.data;\r\n  } catch (error) {\r\n    console.error(error); // catches both errors\r\n    return [];\r\n  }\r\n};\r\n\r\nexport const getYears = async (variables) => {\r\n  try {\r\n    // fetch data from a url endpoint\r\n    const response = await axios.get(\"/filter_years/\", {\r\n      params: {\r\n        variables: variables.join(),\r\n      },\r\n      auth: {\r\n        username: username,\r\n        password: password,\r\n      },\r\n    });\r\n    return await response.data.data;\r\n  } catch (error) {\r\n    console.error(error); // catches both errors\r\n    return [];\r\n  }\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  getData,\r\n  getCities,\r\n  getVariables,\r\n  getYears,\r\n  getCounties,\r\n  getCountyCities,\r\n} from \"./data/BackEndConnection\";\r\nimport {\r\n  Checkbox,\r\n  FormControlLabel,\r\n  Input,\r\n  ListItemText,\r\n  MenuItem,\r\n  Radio,\r\n  RadioGroup,\r\n  Select,\r\n} from \"@mui/material\";\r\nimport \"./styles/filter.css\";\r\n\r\nconst inputs = {\r\n  CITIES: \"cities\",\r\n  YEARS: \"years\",\r\n  VARIABLES: \"variables\",\r\n  COUNTY: \"county\",\r\n};\r\n\r\nconst radioButtons = {\r\n  COUNTIES: \"counties\",\r\n  CITIES: \"cities\",\r\n  CAPITAL_CITIES: \"capital_cities\",\r\n};\r\n\r\nexport function Filter(props) {\r\n  const [open, setOpen] = useState({\r\n    [inputs.CITIES]: false,\r\n    [inputs.YEARS]: false,\r\n    [inputs.VARIABLES]: false,\r\n    [inputs.COUNTY]: false,\r\n  });\r\n\r\n  const [loading, setLoading] = useState(false);\r\n  const [variables, setVariables] = useState([]);\r\n  const [cities, setCities] = useState([]);\r\n  const [counties, setCounties] = useState([]);\r\n  const [years, setYears] = useState([]);\r\n  const [filters, setFilters] = useState({\r\n    [inputs.CITIES]: [],\r\n    [inputs.YEARS]: [],\r\n    [inputs.VARIABLES]: [],\r\n    [inputs.COUNTY]: [],\r\n  });\r\n\r\n  const [entityType, setEntityType] = useState(radioButtons.COUNTIES);\r\n\r\n  useEffect(() => {\r\n    if (variables.length === 0) {\r\n      getVariables().then((value) => {\r\n        setVariables(value);\r\n      });\r\n    }\r\n    if (cities.length === 0) {\r\n      getCities().then((value) => {\r\n        setCities(value);\r\n      });\r\n    }\r\n    if (counties.length === 0) {\r\n      getCounties().then((value) => {\r\n        setCounties(value);\r\n      });\r\n    }\r\n    if (\r\n      filters.cities.length > 0 &&\r\n      filters.variables.length > 0 &&\r\n      filters.years.length > 0\r\n    ) {\r\n      getData(filters.cities, filters.years, filters.variables).then((data) => {\r\n        // console.log(data);\r\n        props.setData(data);\r\n      });\r\n    }\r\n  }, [filters]);\r\n\r\n  async function handleVariableFilterChange(variables) {\r\n    return await getYears(variables);\r\n  }\r\n\r\n  const handleVariableChange = (input) => {\r\n    props.setSelectedVariables(input.target.value);\r\n    setLoading(true);\r\n    handleVariableFilterChange(input.target.value)\r\n      .then((value) => {\r\n        if (value !== undefined) {\r\n          setYears(value);\r\n          setFilters((prevState) => ({ ...prevState, [inputs.YEARS]: value }));\r\n        }\r\n      })\r\n      .then(() => {\r\n        setLoading(false);\r\n      });\r\n    setFilters((prevState) => ({\r\n      ...prevState,\r\n      [inputs.VARIABLES]: input.target.value,\r\n    }));\r\n  };\r\n\r\n  const handleInputChange = (value, input) => {\r\n    const splitStringArray =\r\n      typeof value === \"string\" ? value.split(\",\") : value;\r\n    // Updates filters dinamically, with generic value and input\r\n    setFilters((prevState) => ({ ...prevState, [input]: splitStringArray }));\r\n  };\r\n\r\n  const handleCountiesChange = (value) => {\r\n    if (entityType === radioButtons.CITIES) {\r\n      getCountyCities(value).then((data) => {\r\n        let cities = [];\r\n        Object.entries(data).forEach((department) => {\r\n          cities.push(...department[1]);\r\n        });\r\n        setCities([...new Set(cities)]);\r\n      });\r\n    }\r\n    setFilters((prevState) => ({ ...prevState, [inputs.COUNTY]: value }));\r\n  };\r\n\r\n  const handleClose = (input) => {\r\n    setOpen((prevState) => ({ ...prevState, [input]: false }));\r\n  };\r\n\r\n  const handleOpen = (input) => {\r\n    setOpen((prevState) => ({ ...prevState, [input]: true }));\r\n  };\r\n\r\n  const showCities = () => {\r\n    if (props.showCountyView || entityType === radioButtons.CAPITAL_CITIES) {\r\n      return (\r\n        <div className=\"menu-item\">\r\n          <button\r\n            id=\"open-cities-menu\"\r\n            className=\"menu-btn\"\r\n            onClick={() => {\r\n              handleOpen(inputs.CITIES);\r\n            }}\r\n          >\r\n            Municipios <i className=\"fa fa-angle-down\"></i>\r\n          </button>\r\n          <Select\r\n            multiple\r\n            value={filters.cities}\r\n            onChange={(input) => {\r\n              handleInputChange(input.target.value, inputs.CITIES);\r\n            }}\r\n            input={<Input id=\"select-multiple-checkbox\" />}\r\n            style={{ display: \"none\" }}\r\n            open={open.cities}\r\n            onClose={() => {\r\n              handleClose(inputs.CITIES);\r\n            }}\r\n            MenuProps={{\r\n              anchorEl: document.getElementById(\"open-cities-menu\"),\r\n            }}\r\n          >\r\n            {cities.map((name, index) => (\r\n              <MenuItem key={name + index} value={name}>\r\n                <Checkbox checked={filters.cities.indexOf(name) > -1} />\r\n                <ListItemText primary={name} />\r\n              </MenuItem>\r\n            ))}\r\n          </Select>\r\n        </div>\r\n      );\r\n    }\r\n  };\r\n\r\n  const showCounties = () => {\r\n    if (\r\n      entityType === radioButtons.COUNTIES ||\r\n      entityType === radioButtons.CITIES\r\n    ) {\r\n      return (\r\n        <div className=\"menu-item\">\r\n          <button\r\n            id=\"open-departments-menu\"\r\n            className=\"menu-btn\"\r\n            onClick={() => {\r\n              handleOpen(inputs.COUNTY);\r\n            }}\r\n          >\r\n            Departamentos <i className=\"fa fa-angle-down\"></i>\r\n          </button>\r\n          <Select\r\n            multiple\r\n            value={filters.county}\r\n            onChange={(input) => {\r\n              handleCountiesChange(input.target.value);\r\n            }}\r\n            input={<Input id=\"select-multiple-checkbox\" />}\r\n            style={{ display: \"none\" }}\r\n            open={open.county}\r\n            onClose={() => {\r\n              handleClose(inputs.COUNTY);\r\n            }}\r\n            MenuProps={{\r\n              anchorEl: document.getElementById(\"open-departments-menu\"),\r\n            }}\r\n          >\r\n            {counties.map((name, index) => (\r\n              <MenuItem key={name + index} value={name}>\r\n                <Checkbox checked={filters.county.indexOf(name) > -1} />\r\n                <ListItemText primary={name} />\r\n              </MenuItem>\r\n            ))}\r\n          </Select>\r\n        </div>\r\n      );\r\n    }\r\n  };\r\n\r\n  const onEntityTypeChange = (event) => {\r\n    const radioButtonSelect = event.target.value;\r\n    setEntityType(event.target.value);\r\n    if (radioButtonSelect === radioButtons.CITIES) {\r\n      props.setShowCountyView(true);\r\n    } else {\r\n      props.setShowCountyView(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"menu\">\r\n        <div className=\"menu-item\">\r\n          <button className=\"menu-btn\">\r\n            Tipo de Entidad <i className=\"fa fa-angle-down\"></i>\r\n          </button>\r\n          <div className=\"dropdown-content\">\r\n            <RadioGroup\r\n              aria-label=\"tipo-de-entidad\"\r\n              defaultValue=\"departamento\"\r\n              name=\"radio-buttons-group\"\r\n              onChange={onEntityTypeChange}\r\n              value={entityType}\r\n            >\r\n              <FormControlLabel\r\n                value={radioButtons.CITIES}\r\n                control={<Radio />}\r\n                label=\"Municipio\"\r\n              />\r\n            </RadioGroup>\r\n          </div>\r\n        </div>\r\n        <div className=\"menu-item\">\r\n          <button\r\n            id=\"openMenu\"\r\n            className=\"menu-btn\"\r\n            onClick={() => {\r\n              handleOpen(inputs.VARIABLES);\r\n            }}\r\n          >\r\n            Indicadores <i className=\"fa fa-angle-down\"></i>\r\n          </button>\r\n          <Select\r\n            multiple\r\n            value={props.selectedVariables}\r\n            onChange={handleVariableChange}\r\n            input={<Input id=\"select-multiple-checkbox\" />}\r\n            style={{ display: \"none\" }}\r\n            open={open.variables}\r\n            onClose={() => {\r\n              handleClose(inputs.VARIABLES);\r\n            }}\r\n            MenuProps={{\r\n              anchorEl: document.getElementById(\"openMenu\"),\r\n            }}\r\n          >\r\n            {variables.map((name, index) => (\r\n              <MenuItem key={name + index} value={name}>\r\n                <Checkbox\r\n                  checked={props.selectedVariables.indexOf(name) > -1}\r\n                />\r\n                <ListItemText primary={name} />\r\n              </MenuItem>\r\n            ))}\r\n          </Select>\r\n        </div>\r\n        {showCounties()}\r\n        {showCities()}\r\n        <div className=\"menu-item\">\r\n          <button\r\n            id=\"open-years-menu\"\r\n            className=\"menu-btn\"\r\n            disabled={loading}\r\n            onClick={() => {\r\n              handleOpen(inputs.YEARS);\r\n            }}\r\n          >\r\n            {\" \"}\r\n            Años <i className=\"fa fa-angle-down\"></i>\r\n          </button>\r\n          <Select\r\n            multiple\r\n            value={filters.years}\r\n            onChange={(input) => {\r\n              handleInputChange(input.target.value, inputs.YEARS);\r\n            }}\r\n            input={<Input id=\"select-multiple-checkbox\" />}\r\n            style={{ display: \"none\" }}\r\n            open={open.years}\r\n            onClose={() => {\r\n              handleClose(inputs.YEARS);\r\n            }}\r\n            MenuProps={{\r\n              anchorEl: document.getElementById(\"open-years-menu\"),\r\n            }}\r\n          >\r\n            {years.map((name, index) => (\r\n              <MenuItem key={name + index} value={name}>\r\n                <Checkbox checked={filters.years.indexOf(name) > -1} />\r\n                <ListItemText primary={name} />\r\n              </MenuItem>\r\n            ))}\r\n          </Select>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, {useEffect, useState} from \"react\";\r\nimport { ResponsiveParallelCoordinates } from \"@nivo/parallel-coordinates\";\r\n\r\n\r\nfunction ParallelCoordinates(props) {\r\n  const [data,setData] = useState([])\r\n  const [variables, setVariables] = useState([{\r\n      key: \"municipio\",\r\n      type: \"point\",\r\n      padding: 0,\r\n      values: data.map((d) => d.municipio),\r\n      legend: \"Municipio\",\r\n      legendPosition: \"start\",\r\n      legendOffset: -20,\r\n  }])\r\n\r\n  useEffect(() => {\r\n      function groupByCounty(rows) {\r\n          return Object.values(\r\n              rows.reduce((grouped, curr) => {\r\n                  const countyName = curr.municipio\r\n                  const county = grouped[countyName]\r\n                  return {\r\n                      ...grouped,\r\n                      [countyName]: {\r\n                          ...county,\r\n                          ...curr\r\n                      }\r\n                  }\r\n              }, {})\r\n          )\r\n      }\r\n\r\n    if(props.data !== undefined ){\r\n       let newData =  [];\r\n           Object.entries(props.data).forEach(([variable,city])=>{\r\n           Object.entries(city).forEach(([key,value])=>{\r\n               let cityData = {}\r\n               cityData[variable] = Object.entries(value)[0][1][2];\r\n               cityData[\"municipio\"] = key;\r\n               newData.push(cityData);\r\n           })\r\n        })\r\n        if(newData.length>0){\r\n            setVariables(getVariables())\r\n            setData(groupByCounty(newData));\r\n        }\r\n    }\r\n  }, [props.data]);\r\n\r\n  const getVariables = () => {\r\n      let variables = [{\r\n          key: \"municipio\",\r\n          type: \"point\",\r\n          padding: 0,\r\n          values: data.map((d) => d.municipio),\r\n          legend: \"Municipio\",\r\n          legendPosition: \"start\",\r\n          legendOffset: -20,\r\n          color:\"red\"\r\n      }]\r\n      if(data.length > 0){\r\n          const otherVariables = Object.keys(data[0]).filter(value => value!=='municipio').map(value => {\r\n              return {\r\n                  key: value,\r\n                  type: \"linear\",\r\n                  min: \"auto\",\r\n                  max: \"auto\",\r\n                  ticksPosition: \"before\",\r\n                  legend: value,\r\n                  legendPosition: \"start\",\r\n                  legendOffset: 20,\r\n              }\r\n          })\r\n          variables = variables.concat(otherVariables);\r\n      }\r\n      return variables\r\n    }\r\n\r\n  return (\r\n    <div style={{ width: \"50vw\", height: \"1500px\" }}>\r\n      <ResponsiveParallelCoordinates\r\n        data={data}\r\n        reverse={true}\r\n        variables = {variables}\r\n        // variables={[\r\n        //   {\r\n        //     key: \"municipio\",\r\n        //     type: \"point\",\r\n        //     padding: 0,\r\n        //     values: data.map((d) => d.municipio),\r\n        //     legend: \"Municipio\",\r\n        //     legendPosition: \"start\",\r\n        //     legendOffset: -20,\r\n        //   },\r\n        //   {\r\n        //     key: \"desercion\",\r\n        //     type: \"linear\",\r\n        //     min: \"auto\",\r\n        //     max: \"auto\",\r\n        //     ticksPosition: \"before\",\r\n        //     legend: \"Deserción\",\r\n        //     legendPosition: \"start\",\r\n        //     legendOffset: 20,\r\n        //   },\r\n        //   {\r\n        //     key: \"embarazos\",\r\n        //     type: \"linear\",\r\n        //     min: \"0\",\r\n        //     max: \"800\",\r\n        //     ticksPosition: \"before\",\r\n        //     legend: \"Embarazos\",\r\n        //     legendPosition: \"start\",\r\n        //     legendOffset: 20,\r\n        //   },\r\n        //   {\r\n        //     key: \"rmm\",\r\n        //     type: \"linear\",\r\n        //     min: \"auto\",\r\n        //     max: \"auto\",\r\n        //     ticksPosition: \"before\",\r\n        //     legend: \"Tasa de mortalidad materna\",\r\n        //     legendPosition: \"start\",\r\n        //     legendOffset: 20,\r\n        //   },\r\n        // ]}\r\n        margin={{ top: 50, right: 60, bottom: 50, left: 60 }}\r\n        colors={{ scheme: \"purple_red\" }}\r\n        lineOpacity={1}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ParallelCoordinates;\r\n","import MapArcgis from \"./MapArcgis\";\r\nimport React, { useState } from \"react\";\r\nimport { Grid } from \"@mui/material\";\r\nimport { useEffect } from \"react\";\r\nimport { Filter } from \"./Filter\";\r\nimport \"./styles/App.css\";\r\nimport ParallelCoordinates from \"./ParallelCoordinates\";\r\n\r\nconst App = () => {\r\n  const [data, setData] = useState([]);\r\n  const [showCountyView, setShowCountyView] = useState(false);\r\n  const [selectedVariables, setSelectedVariables] = useState([]);\r\n\r\n  const dataTestForMap = [\r\n    {\r\n      name: \"Demo 1\",\r\n      layerId: 0,\r\n      values: [\r\n        {\r\n          MPIO_CDPMP: 5893,\r\n          MPIO_CNMBR: \"YONDÓ\",\r\n          COLOR: \"#fc0000\",\r\n        },\r\n        {\r\n          MPIO_CDPMP: 5895,\r\n          MPIO_CNMBR: \"ZARAGOZA\",\r\n          COLOR: \"#dd6174\",\r\n        },\r\n        {\r\n          MPIO_CDPMP: 23001,\r\n          MPIO_CNMBR: \"MONTERÍA\",\r\n          COLOR: \"#ed9189\",\r\n        },\r\n        {\r\n          MPIO_CDPMP: 23068,\r\n          MPIO_CNMBR: \"AYAPEL\",\r\n          COLOR: \"#ea5261\",\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      name: \"Demo 2\",\r\n      layerId: 0,\r\n      values: [\r\n        {\r\n          MPIO_CDPMP: 70820,\r\n          MPIO_CNMBR: \"Santiago de\",\r\n          COLOR: \"#fc0000\",\r\n        },\r\n        {\r\n          MPIO_CDPMP: 73001,\r\n          MPIO_CNMBR: \"Ibagué\",\r\n          COLOR: \"#dd6174\",\r\n        },\r\n        {\r\n          MPIO_CDPMP: 68895,\r\n          MPIO_CNMBR: \"Zapatoca\",\r\n          COLOR: \"#ed9189\",\r\n        },\r\n        {\r\n          MPIO_CDPMP: 63001,\r\n          MPIO_CNMBR: \"Armenia\",\r\n          COLOR: \"#ea5261\",\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      name: \"Demo 3\",\r\n      layerId: 1,\r\n      values: [\r\n        {\r\n          DPTO_CCDGO: 5,\r\n          FIRST_DPTO_CNMBR: \"Antioquia\",\r\n          COLOR: \"#fc0000\",\r\n        },\r\n        {\r\n          DPTO_CCDGO: 8,\r\n          FIRST_DPTO_CNMBR: \"Atlántico\",\r\n          COLOR: \"#dd6174\",\r\n        },\r\n        {\r\n          DPTO_CCDGO: 13,\r\n          FIRST_DPTO_CNMBR: \"Bolívar\",\r\n          COLOR: \"#ed9189\",\r\n        },\r\n        {\r\n          DPTO_CCDGO: 17,\r\n          FIRST_DPTO_CNMBR: \"Caldas\",\r\n          COLOR: \"#ea5261\",\r\n        },\r\n      ],\r\n    },\r\n  ];\r\n\r\n  const [mapData, setMapData] = useState(dataTestForMap);\r\n\r\n  useEffect(() => {\r\n    const layerType = showCountyView ? 0 : 1;\r\n    const newMapData = selectedVariables.map((value) => {\r\n      return {\r\n        name: value,\r\n        layerId: layerType,\r\n        values: [\r\n          {\r\n            DPTO_CCDGO: 5,\r\n            FIRST_DPTO_CNMBR: \"Antioquia\",\r\n            COLOR: \"#fc0000\",\r\n          },\r\n          {\r\n            DPTO_CCDGO: 8,\r\n            FIRST_DPTO_CNMBR: \"Atlántico\",\r\n            COLOR: \"#dd6174\",\r\n          },\r\n          {\r\n            DPTO_CCDGO: 13,\r\n            FIRST_DPTO_CNMBR: \"Bolívar\",\r\n            COLOR: \"#ed9189\",\r\n          },\r\n          {\r\n            DPTO_CCDGO: 17,\r\n            FIRST_DPTO_CNMBR: \"Caldas\",\r\n            COLOR: \"#ea5261\",\r\n          },\r\n        ],\r\n      };\r\n    });\r\n    if (newMapData.length > 0) {\r\n      setMapData(newMapData);\r\n    }\r\n  }, [selectedVariables, showCountyView]);\r\n\r\n  return (\r\n    <Grid\r\n      container\r\n      direction=\"column\"\r\n      justifyContent=\"center\"\r\n      alignItems=\"center\"\r\n    >\r\n      <Grid item xs={12}>\r\n        <Filter\r\n          showCountyView={showCountyView}\r\n          setShowCountyView={setShowCountyView}\r\n          selectedVariables={selectedVariables}\r\n          setSelectedVariables={setSelectedVariables}\r\n          setData={setData}\r\n        />\r\n      </Grid>\r\n      <Grid\r\n        container\r\n        direction=\"row\"\r\n        justifyContent=\"space-between\"\r\n        alignItems=\"center\"\r\n      >\r\n        <Grid\r\n          item\r\n          xs={12}\r\n          md={6}\r\n          style={{\r\n            height: \"calc( 100vh - 52px )\",\r\n            overflow: \"auto\",\r\n          }}\r\n        >\r\n          <ParallelCoordinates data={data} />\r\n        </Grid>\r\n        <Grid\r\n          container\r\n          xs={12}\r\n          md={6}\r\n          style={{ minHeight: \"80vh\" }}\r\n          direction=\"column\"\r\n          justifyContent=\"center\"\r\n          alignItems=\"center\"\r\n        >\r\n          <Grid\r\n            item\r\n            xs={12}\r\n            style={{\r\n              width: \"50vw\",\r\n              height: \"40vh\",\r\n            }}\r\n          >\r\n            <MapArcgis\r\n              data={mapData}\r\n              realData={data}\r\n              showCountyView={showCountyView}\r\n            />\r\n          </Grid>\r\n          <Grid\r\n            item\r\n            xs={12}\r\n            style={{\r\n              width: \"50vw\",\r\n              height: \"40vh\",\r\n            }}\r\n          >\r\n            <div style={{ overflow: \"auto\" }}>\r\n              <p>Panel detalle indicador</p>\r\n              {data.length && (\r\n                <ul>\r\n                  {data.slice(0, 15).map((d) => (\r\n                    <li>{`${d.Divipola} (${d.Municipio} - ${d.Departamento}) tiene ${d.Mujeres} mujeres`}</li>\r\n                  ))}\r\n                </ul>\r\n              )}\r\n            </div>\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./styles/index.css\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}